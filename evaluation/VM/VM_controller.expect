#!/usr/bin/expect -f

set timeout -1

set curr_dir [file normalize [file dirname $argv0]]

# first argument indicates the controller type: native or gdpr
set controller_type [lindex $argv 0];
# second argument indicates number of cores
set cores [lindex $argv 1];
# third argument indicates MB of memory for the VM
set memory [lindex $argv 2];
# fourth argument indicates the db type
set db_type [lindex $argv 3];
# fifth argument indicates the db address
set db_address [lindex $argv 4];
# sixth argument indicates the controller address
set controller_address [lindex $argv 5];
# seventh argument indicates the controller port
set controller_port [lindex $argv 6];
# eighth argument indicates the output file path
set output_file [lindex $argv 7];
# (GDPR only) ninth argument indicates the gdpr config
set gdpr_config [lindex $argv 8];
# (GDPR only) tenth argument indicates the gdpr log path
set gdpr_log_path [lindex $argv 9];

# Launch the server VM
spawn sudo LD_LIBRARY_PATH=$::env(LD_LIBRARY_PATH) numactl --cpunodebind=0 --membind=0   \
bash ${curr_dir}/../../AMD_SEV_SNP/AMDSEV/launch-qemu.sh \
-hda /scratch/dimitrios/images/controller.img \
-sev-es \
-bridge virbr0 \
-bios /scratch/dimitrios/OVMF_files/controller \
-smp $cores \
-mem $memory

# Enter username
expect -- "login: "
send -- "root\r"

# Enter Password
expect -- "Password: "
send -- "123456\r"

# Expect the login to be done
expect -- "# "

# Go to the controller directory
send -- "cd /root/GDPRuler/controller\r"
expect -- "# "

# Start the appropriate controller
send -- "cd /root/GDPRuler\r"
expect -- "# "
if { $controller_type == "native" } {
  # Run native controller
  send -- "python3 native_ctl.py --db $db_type --db_address $db_address --controller_address $controller_address --controller_port $controller_port > $output_file\r"
  expect -- "# "
} elseif { $controller_type == "gdpr" } {
  # Delete and recreate the folder for the logs
  send -- "rm -rf $gdpr_log_path\r"
  expect -- "# "
  send -- "mkdir -p $gdpr_log_path\r"
  expect -- "# "
  # Run GDPR controller
  send -- "python3 GDPRuler.py --db $db_type --config $gdpr_config --logpath $gdpr_log_path --db_address $db_address --controller_address $controller_address --controller_port $controller_port\r"
  expect -- "# "
} else {
  # invalid controller type
  shutdown
}
